openapi: 3.0.0
info:
  title: Sample Project
  description: A project designed to be able to customize and send email templates.
  version: 0.1.0
servers:
  - url: http://localhost:8000/v1/api
    description: Base API Url
paths:
  /templates:
    get:
      tags:
        - Templates
      summary: Returns a list of all the templates.
      responses:
        "200":
          description: A JSON array of all the templates
          content:
            application/json:
              schema:
                type: array
                items:
                  type: Object
        "500":
          description: An error has occured
  /templates/getByUser:
    get:
      tags:
        - Templates
      summary: Returns a list of templates created by the logged in user
      description: - Returns a list of templates created by the user, user must be logged in because API uses
        the authorization token to get identity of user
      responses:
        "200":
          description: A JSON array of all the templates
          content:
            application/json:
              schema:
                type: array
                items:
                  type: Object
        "500":
          description: An error has occured
  /templates/create :
    post:
      tags:
        - Templates
      summary: Creates a template 
      requestBody:
        description: Create a template
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template'
      responses:
        "200":
          description: Successfully created the template
          content: 
            application/json:
              schema:
                type: array
                items: 
                  type: String
        "500":
          description: An error has occured
  /templates/{id}:
    patch:
      tags:
        - Templates
      parameters:
        - name: id
          in: path
          description: Id of the template
          required: true
          schema:
            type: String
      summary: Edit a template
      requestBody:
        description: Update a template
        content: 
          application/json:
            schema:
              properties:
                body:
                  type: React Editor Object
                  example: body: "This is a react editor object"
      responses:
        "200":
          description: Succesfully updated template
          content:
            application/json:
              schema:
                type: array
                items:
                  type: String
        "500":
          description: An error has occured
  /send/{id}:
    post:
      tags: 
        - Templates
      parameters:
        - name: id
          in: path
          description: Id of the template
          required: true
          schema:
            type: String
      summary: Send the template email to email of your choice
      requestBody:
        description: Send an email of the template
        content:
          application/json:
            schema:
              properties:
                destinationEmail:
                  type: String
                  example: example@email.com
                header:
                  type: String
                  example: This is an email header
      responses:
        "200":
          description: Succesfully sent the template
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "500":
          description: An error has occured
          content:
            application/json:
              schema: array
              items:
                type: string
  /login:
    post:
      tags:
        - User
      summary: Login a user with email and password
      requestBody:
        description: Logs in a user with the correct email and password
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  example: example@email.com
                password:
                  type: string
                  example: password123
      responses:
        "200":
          description: Succesfully logged in the user
        "500":
          description: An error has occured
  /check:
    post:
      tags:
        - User
      summary: Checks the provided OTP to see if its the correct OTP
      requestBody:
        description: Validates the provided OTP
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
                  example: 6213838dsa8d1
                otp:
                  type: string
                  example: "11111"
      responses:
        "200":
          description: OTP Checks succeeds and returns a JWT Token
          content: 
            application/json:
              schema:
                properties:
                  token:
                    type: String
                    example: d87sa6d87sadsakcxmksaoicxsa7d8sa89
        "500":
          description: An error has occured
  /profile:
    get:
      tags:
        - User
      summary: Gets the user profile with the saved JWT token
      description: Gets the profile of the user with the saved JWT token, only works if the user is logged in
      responses:
        "200":
          description: Succesfully got the user profile
          content:
            application/json:
              schema:
                properties:
                  _id:
                    type: string
                    example: 6213838dsa8d1
                  name: 
                    type: String
                    example: John Smith
                  email:
                    type: String
                    example: John@email.com
                  phone:
                    type: String
                    example: "87654321"
        "500":
          description: An error has occured
  /name:
    patch:
      tags:
        - User
      summary: Updates the user's name
      description: Updates the user's name, only works if the user is logged in
      requestBody:
        description: Needs name attribute
        content:
          application/json:
            schema:
              properties:
                name:
                  type: String
                  example: Will Smith
      responses:
        "200":
          description: Succesfully updated the user's name
          content:
            application/json:
              schema:
                properties:
                  message: 
                    type: string
                    example: User succesfully updated
                  updatedUser:
                    type: JSON
                    example: {"name":"UpdatedUser", "email":"user@email.com","phone":"7654321"}
        "500":
          description: An error has occured
  /email:
    patch:
      tags:
        - User
      summary: Updates the user's email
      description: Updates the user's email, only works if the user is logged in
      requestBody:
        description: Needs email attribute
        content:
          application/json:
            schema:
              properties:
                updatedEmail:
                  type: String
                  example: John321@email.com
      responses:
        "200":
          description: Succesfully updated the user's email
          content:
            application/json:
              schema:
                properties:
                  message: 
                    type: string
                    example: User succesfully updated
                  updatedUser:
                    type: JSON
                    example: {"name":"User", "email":"John321@email.com","phone":"7654321"}
        "500":
          description: An error has occured
  /phone:
    patch:
      tags:
        - User
      summary: Updates the user's phone number
      description: Updates the user's phone number, only works if the user is logged in
      requestBody:
        description: Needs phone number attribute
        content:
          application/json:
            schema:
              properties:
                phone:
                  type: String
                  example: "12334567"
      responses:
        "200":
          description: Succesfully updated the user's phone number
          content:
            application/json:
              schema:
                properties:
                  message: 
                    type: string
                    example: User succesfully updated
                  updatedUser:
                    type: JSON
                    example: {"name":"User", "email":"user@email.com","phone":"1234567"}
        "500":
          description: An error has occured
  /password:
    patch:
      tags:
        - User
      summary: Updates the user's password
      description: Updates the user's password, only works if the user is logged in
      requestBody:
        description: Needs password attribute
        content:
          application/json:
            schema:
              properties:
                password:
                  type: String
                  example: "thisisupdatedpassword"
      responses:
        "200":
          description: Succesfully updated the user's password
          content:
            application/json:
              schema:
                properties:
                  message: 
                    type: string
                    example: User succesfully updated
                  updatedUser:
                    type: JSON
                    example: {"name":"user", "email":"user@email.com","phone":"7654321"}
        "500":
          description: An error has occured
components:
  schemas:
    template:
      properties:
        name:
          type: String
          example: This is an email name
        body:
          type: React Editor Object
          example: body: "This is react editor object"
        cssFile: 
          type: String
          example: "h1 {padding: 10px}"